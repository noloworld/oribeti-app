// Forçar deploy: alterado em 24/06/2024
// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  nome      String
  email     String   @unique
  senha     String   // hash da senha
  tipo      UserType @default(REVENDEDOR)
  criadoEm  DateTime @default(now())
  lastOnline DateTime? // Data/hora do último acesso online
}

enum UserType {
  ADMIN
  REVENDEDOR
}

model Cliente {
  id        Int      @id @default(autoincrement())
  nome      String
  email     String?
  telefone  String?
  morada    String?
  criadoEm  DateTime @default(now())
  vendas    Venda[]
}

model Venda {
  id           Int      @id @default(autoincrement())
  clienteId    Int
  cliente      Cliente  @relation(fields: [clienteId], references: [id])
  valorPago    Float    @default(0)
  observacoes  String?
  data         DateTime
  status       VendaStatus @default(PENDENTE)
  criadoEm     DateTime @default(now())
  pagamentos   Pagamento[]
  produtos     VendaProduto[]
  // Campos adicionais para compatibilidade com o código existente
  nomeProduto  String?  // Campo temporário para compatibilidade
  valorRevista Float?   // Campo temporário para compatibilidade
  valorFinal   Float?   // Campo temporário para compatibilidade
}

model VendaProduto {
  id           Int      @id @default(autoincrement())
  vendaId      Int
  venda        Venda    @relation(fields: [vendaId], references: [id], onDelete: Cascade)
  nomeProduto  String
  quantidade   Int      @default(1)
  valorRevista Float
  valorFinal   Float
}

model Pagamento {
  id           Int      @id @default(autoincrement())
  vendaId      Int
  venda        Venda    @relation(fields: [vendaId], references: [id], onDelete: Cascade)
  valor        Float
  data         DateTime
  observacoes  String?
  criadoEm     DateTime @default(now())
}

enum VendaStatus {
  PAGO
  PENDENTE
}

model Despesa {
  id        Int      @id @default(autoincrement())
  nome      String
  valor     Float
  data      DateTime
  criadoEm  DateTime @default(now())
}

model Log {
  id        Int      @id @default(autoincrement())
  userId    Int
  userEmail String
  acao      String
  detalhes  String?
  data      DateTime @default(now())
}
